(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{578:function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"default",(function(){return v}));var r,o,s=n(148),i=(n(381),n(0)),a=n.n(i),c=n(149),l=["components"];function u(){return(u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function d(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(o="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0)&&o(e);"undefined"!=typeof reactHotLoaderGlobal&&reactHotLoaderGlobal.default.signature;var b,f,p=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(c.b)("div",t)}},m=p("RcCard"),y={};function v(e){var t,n,o=e.components,s=d(e,l);return Object(c.b)("wrapper",u({},y,s,{components:o,mdxType:"MDXLayout"}),Object(c.b)("h1",{className:"__internal",id:"usevirtuallist-虚拟列表渲染"},"useVirtualList 虚拟列表渲染",Object(c.b)("a",{parentName:"h1",href:"#usevirtuallist-%E8%99%9A%E6%8B%9F%E5%88%97%E8%A1%A8%E6%B8%B2%E6%9F%93","aria-hidden":!0,className:"anchor"},"#")),Object(c.b)(m,{cardTitle:"使用方法",cardExtra:"useIsVisible 是否在可视区",content:"const Section = (props) => {\nconst ref = useRef(null)\nconst entry = useVirtualList(ref, {})\nconst isVisible = !!entry?.isIntersecting\nconsole.log(`Render Section ${props.title}`, { isVisible })\nreturn (\n  <div\n    ref={ref}\n    style={{\n      minHeight: '100vh',\n      display: 'flex',\n      border: '1px dashed #000',\n      fontSize: '2rem',\n      width: '100%'\n    }}\n  >\n    {\n      isVisible ? (\n        <div style={{ margin: 'auto' }}>{props.title}</div>\n      ) : \"\"\n    }\n  </div>\n)\n}\nArray.from({ length: 100 }).map((_, index) => (\n  <Section key={index + 1} title={`${index + 1}`} />\n))",code:String.raw(r||(t=["import { RefObject, useEffect, useState } from 'react'\ninterface Args extends IntersectionObserverInit {\n  freezeOnceVisible?: boolean\n}\n/**\n * \n * @param {ReactRef} elementRef 传入虚拟列表父盒子的 ref\n * @param {object} \n * threshold         阀值 0-1 1表示完全出现在屏幕可视区域才触发\n * root              表示指定根元素 默认为浏览器视口  用于检查目标可见性\n * rootMargin        root的外边距 '0 0 0 0'  \n * freezeOnceVisible 是否缓存 再次滑动不重新渲染\n * @returns {Object} entry 这个对象具有当前可视区的信息 \n * 例如 entry.isIntersecting 是否在可视区范围\n */\nfunction useVirtualList(\n  elementRef: RefObject<Element>,\n  {\n    threshold = 0,\n    root = null,\n    rootMargin = '0%',\n    freezeOnceVisible = false\n  }: Args\n): IntersectionObserverEntry | undefined {\n  const [entry, setEntry] = useState<IntersectionObserverEntry>()\n  const frozen = entry?.isIntersecting && freezeOnceVisible\n  const updateEntry = ([entry]: IntersectionObserverEntry[]): void => {\n    setEntry(entry)\n  }\n  useEffect(() => {\n    const node = elementRef?.current\n    const hasIOSupport = !!window.IntersectionObserver\n    if (!hasIOSupport || frozen || !node) return\n    const observerParams = { threshold, root, rootMargin }\n    const observer = new IntersectionObserver(updateEntry, observerParams)\n    observer.observe(node)\n    return () => observer.disconnect()\n  }, [elementRef, JSON.stringify(threshold), root, rootMargin, frozen])\n  return entry\n}\nexport default useVirtualList"],n||(n=t.slice(0)),r=Object.freeze(Object.defineProperties(t,{raw:{value:Object.freeze(n)}})))),descriptionTitle:"useIsVisible-Hook 源码",description:Object(c.b)(a.a.Fragment,null,Object(c.b)("h3",null,"使用场景"),Object(c.b)("span",null,"1: 虚拟渲染"),Object(c.b)("span",null,"2: 懒加载")),mdxType:"RcCard"}))}v.isMDXComponent=!0,v=Object(s.hot)(e)(v),(b="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0)&&(b.register(p,"makeShortcode","/Users/eternallycyf/Documents/GitHub/case/pluviophobe-react-document/docs/zh/more/react-hook/use-virtual-list/README.md"),b.register(m,"RcCard","/Users/eternallycyf/Documents/GitHub/case/pluviophobe-react-document/docs/zh/more/react-hook/use-virtual-list/README.md"),b.register(y,"layoutProps","/Users/eternallycyf/Documents/GitHub/case/pluviophobe-react-document/docs/zh/more/react-hook/use-virtual-list/README.md"),b.register("wrapper","MDXLayout","/Users/eternallycyf/Documents/GitHub/case/pluviophobe-react-document/docs/zh/more/react-hook/use-virtual-list/README.md"),b.register(v,"MDXContent","/Users/eternallycyf/Documents/GitHub/case/pluviophobe-react-document/docs/zh/more/react-hook/use-virtual-list/README.md")),(f="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0)&&f(e)}.call(this,n(5)(e))}}]);